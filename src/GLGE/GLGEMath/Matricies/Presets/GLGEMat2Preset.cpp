/**
 * @file GLGEMat2Preset.cpp
 * @author DM8AT
 * @brief implement the C-Bindings for the 2x2 matrix preset
 * @version 0.1
 * @date 2025-07-18
 * 
 * @copyright Copyright (c) 2025
 * 
 */

GLGE_MAT_NAME GLGE_C_FUNC(GLGE_CONCATINATE_DEFINE(GLGE_MAT_NAME, _identity))() {return GLGE_MAT_NAME();}

GLGE_MAT_NAME GLGE_C_FUNC(GLGE_CONCATINATE_DEFINE(GLGE_MAT_NAME, _add))(GLGE_MAT_NAME a, GLGE_MAT_NAME b) {return a + b;}

GLGE_MAT_NAME GLGE_C_FUNC(GLGE_CONCATINATE_DEFINE(GLGE_MAT_NAME, _addScalar))(GLGE_MAT_NAME a, GLGE_MAT_TYPE s) {return a + s;}

GLGE_MAT_NAME GLGE_C_FUNC(GLGE_CONCATINATE_DEFINE(GLGE_MAT_NAME, _subtract))(GLGE_MAT_NAME a, GLGE_MAT_NAME b) {return a - b;}

GLGE_MAT_NAME GLGE_C_FUNC(GLGE_CONCATINATE_DEFINE(GLGE_MAT_NAME, _subtractScalar))(GLGE_MAT_NAME a, GLGE_MAT_TYPE s) {return a - s;}

GLGE_MAT_NAME GLGE_C_FUNC(GLGE_CONCATINATE_DEFINE(GLGE_MAT_NAME, _negate))(GLGE_MAT_NAME a) {return -a;}

GLGE_MAT_NAME GLGE_C_FUNC(GLGE_CONCATINATE_DEFINE(GLGE_MAT_NAME, _multiply))(GLGE_MAT_NAME a, GLGE_MAT_NAME b) {return a * b;}

GLGE_MAT_NAME GLGE_C_FUNC(GLGE_CONCATINATE_DEFINE(GLGE_MAT_NAME, _multiplyScalar))(GLGE_MAT_NAME a, GLGE_MAT_TYPE s) {return a * s;}

GLGE_MAT_VEC_TYPE GLGE_C_FUNC(GLGE_CONCATINATE_DEFINE(GLGE_MAT_NAME, _multiplyVector))(GLGE_MAT_NAME a, GLGE_MAT_VEC_TYPE v) {return a * v;}

GLGE_MAT_NAME GLGE_C_FUNC(GLGE_CONCATINATE_DEFINE(GLGE_MAT_NAME, _divideScalar))(GLGE_MAT_NAME a, GLGE_MAT_TYPE s) {return a / s;}

void GLGE_C_FUNC(GLGE_CONCATINATE_DEFINE(GLGE_MAT_NAME, _addTo))(GLGE_MAT_NAME* a, GLGE_MAT_NAME b) {*a += b;}

void GLGE_C_FUNC(GLGE_CONCATINATE_DEFINE(GLGE_MAT_NAME, _addScalarTo))(GLGE_MAT_NAME* a, GLGE_MAT_TYPE s) {*a += s;}

void GLGE_C_FUNC(GLGE_CONCATINATE_DEFINE(GLGE_MAT_NAME, _subtractFrom))(GLGE_MAT_NAME* a, GLGE_MAT_NAME b) {*a -= b;}

void GLGE_C_FUNC(GLGE_CONCATINATE_DEFINE(GLGE_MAT_NAME, _subtractScalarFrom))(GLGE_MAT_NAME* a, GLGE_MAT_TYPE s) {*a -= s;}

void GLGE_C_FUNC(GLGE_CONCATINATE_DEFINE(GLGE_MAT_NAME, _negateThis))(GLGE_MAT_NAME* a) {*a = -(*a);}

void GLGE_C_FUNC(GLGE_CONCATINATE_DEFINE(GLGE_MAT_NAME, _multiplyTo))(GLGE_MAT_NAME* a, GLGE_MAT_NAME b) {*a *= b;}

void GLGE_C_FUNC(GLGE_CONCATINATE_DEFINE(GLGE_MAT_NAME, _multiplyScalarTo))(GLGE_MAT_NAME* a, GLGE_MAT_TYPE s) {*a *= s;}

void GLGE_C_FUNC(GLGE_CONCATINATE_DEFINE(GLGE_MAT_NAME, _divideScalarFrom))(GLGE_MAT_NAME* a, GLGE_MAT_TYPE s) {*a /= s;}

double GLGE_C_FUNC(GLGE_CONCATINATE_DEFINE(GLGE_MAT_NAME, _determinant))(GLGE_MAT_NAME mat) {return mat.determinant();}

GLGE_MAT_NAME GLGE_C_FUNC(GLGE_CONCATINATE_DEFINE(GLGE_MAT_NAME, _cofactors))(GLGE_MAT_NAME mat) {return mat.cofactors();}

void GLGE_C_FUNC(GLGE_CONCATINATE_DEFINE(GLGE_MAT_NAME, _cofactorThis))(GLGE_MAT_NAME* mat) {mat->cofactorThis();}

GLGE_MAT_NAME GLGE_C_FUNC(GLGE_CONCATINATE_DEFINE(GLGE_MAT_NAME, _adjugate))(GLGE_MAT_NAME mat) {return mat.adjugate();}

void GLGE_C_FUNC(GLGE_CONCATINATE_DEFINE(GLGE_MAT_NAME, _adjugateThis))(GLGE_MAT_NAME* mat) {mat->adjugateThis();}

GLGE_MAT_NAME GLGE_C_FUNC(GLGE_CONCATINATE_DEFINE(GLGE_MAT_NAME, _invert))(GLGE_MAT_NAME mat) {return mat.inverse();}

void GLGE_C_FUNC(GLGE_CONCATINATE_DEFINE(GLGE_MAT_NAME, _invertThis))(GLGE_MAT_NAME* mat) {mat->inverseThis();}

GLGE_MAT_NAME GLGE_C_FUNC(GLGE_CONCATINATE_DEFINE(GLGE_MAT_NAME, _transpose))(GLGE_MAT_NAME mat) {return mat.transpose();}

void GLGE_C_FUNC(GLGE_CONCATINATE_DEFINE(GLGE_MAT_NAME, _transposeThis))(GLGE_MAT_NAME* mat) {mat->transposeThis();}

//undefine everything
#undef GLGE_MAT_VEC_TYPE
#undef GLGE_MAT_STRUCT_NAME
#undef GLGE_MAT_NAME
#undef GLGE_MAT_TYPE